import{__require as e}from"./chunk-___ucjiX.js";import{mkdir as t,readFile as n,stat as r}from"fs/promises";import{dirname as i,join as a,relative as o}from"path";async function s(e,{outdir:t}={}){t||=await u(e);let n=a(t,`agent.js`),r=p(),i=await r.build({...f,entryPoints:[e],outfile:n});if(i.errors.length>0)throw Error(`Failed to build agent!`);return{outfile:n}}async function c(e,{onErrors:t,onBuildStart:n,onBuildEnd:r,outdir:i}){let o=p();i||=await u(e);let s=a(i,`agent.js`),c=await o.context({...f,entryPoints:[e],logLevel:`silent`,outfile:s,plugins:[{name:`blink-dev-server`,setup(e){e.onStart(()=>{n?.()}),e.onEnd(e=>{if(e.errors.length>0){t?.(e.errors);return}r?.({outfile:s})})}}]});return await c.watch(),{dispose:()=>{c.dispose()}}}async function l(e){let t=await d(e,`package.json`);if(!t)throw Error(`No package.json found in ${e}`);let s=JSON.parse(await n(t,`utf-8`)),c=s.main;if(!c)throw Error(`"main" is not set in ${o(process.cwd(),t)}. It should be set to the entrypoint of your agent.`);let l=a(i(t),c),u=await r(l);if(!u.isFile())throw Error(`${l} is not a file.`);return l}async function u(e){let n=await d(e,`node_modules`);if(!n){let t=await r(e);return t.isDirectory()?a(e,`.blink`):a(i(e),`.blink`)}let o=a(n,`.blink`);return await t(o,{recursive:!0}),o}async function d(e,t){let n=e;for(;n!==i(n);){let e=a(n,t);try{return await r(e),e}catch{}n=i(n)}}const f={bundle:!0,format:`cjs`,platform:`node`,target:`node18`,sourcemap:`inline`},p=()=>{try{return e(`esbuild`)}catch{throw Error("esbuild is not installed. Please install it with `bun add esbuild`.")}};export{s as build,d as findNearestEntry,l as resolveEntrypoint,c as watch};